import streamlit as st
import os
from dotenv import load_dotenv
from text_processor import process_text_with_chatgpt, split_text_by_tokens, process_chunk

load_dotenv()

st.set_page_config(
    page_title="Russian Text Enhancer",
    page_icon="üìù",
    layout="wide"
)

st.title("Russian Text Enhancer")
st.markdown("""
–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–ª—É—á—à–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –¥–ª–∏–Ω–Ω—ã—Ö —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é GPT-4.
–¢–µ–∫—Å—Ç —Ä–∞–∑–±–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é —Å —É—á—ë—Ç–æ–º —Å—Ç–∏–ª–∏—Å—Ç–∏–∫–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
""")

api_key = os.environ.get("OPENAI_KEY") or os.environ.get("OPENAI_API_KEY", "")
if not api_key:
    st.warning("OpenAI API key –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ OPENAI_KEY –≤ .env –∏–ª–∏ Secrets.")
    st.stop()

# Replace file upload with text area
user_text = st.text_area("–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:", height=300, placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏...")

if st.button("–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç"):
    if user_text:
        try:
            st.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")

            # Prepare the progress display components
            progress_bar = st.progress(0)
            status_text = st.empty()

            # Process the text with visual progress tracking
            chunks = split_text_by_tokens(user_text)
            total_chunks = len(chunks)
            results = []

            for i, chunk in enumerate(chunks):
                # Update progress indicators
                progress_percent = i / total_chunks
                progress_bar.progress(progress_percent)
                status_text.text(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {i+1} –∏–∑ {total_chunks} —á–∞—Å—Ç–µ–π —Ç–µ–∫—Å—Ç–∞ ({int(progress_percent*100)}%)")

                # Process the current chunk
                with st.spinner(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Å—Ç–∏ {i+1}/{total_chunks}..."):
                    result = process_chunk(chunk)
                    results.append(result)

            # Complete the progress bar
            progress_bar.progress(1.0)
            status_text.text("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

            # Join all processed chunks
            output = "\n\n".join(results)

            st.success("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            st.download_button("üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç", output, file_name="processed_text.txt", mime="text/plain")
            st.text_area("–†–µ–∑—É–ª—å—Ç–∞—Ç:", output, height=500)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞: {str(e)}")
    else:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")